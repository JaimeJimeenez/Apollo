name: Verify Container's Comunication

on:
  pull_request:
    branches:
        - main
        - develop

jobs:

  Inter_Container_Comunication:
    
    name: Verify Container's Comunication
    runs-on: ubuntu-latest
    services: 
      docker:
        image: docker:20.10.7
        options: --privileged
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Builds
        uses: docker/setup-buildx-action@v1
      
      - name: Build Docker's images
        run: |
          docker compose -f docker-compose.yml build
          docker compose -f docker-compose.yml up -d
      
      - name: Install ping
        run: |
          docker exec frontend /bin/bash -c "apt-get update && apt-get install -y iputils-ping"
      
      - name: Run tests
        run: | 
          # Wait until services are ready
          sleep 10
          # Verify communication
          docker compose exec frontend ping -c 4 gateway
          docker compose exec frontend ping -c 4 nlp
          docker compose exec frontend ping -c 4 dialog
          docker compose exec frontend ping -c 4 integration
          docker compose exec frontend ping -c 4 auth
          docker compose exec frontend ping -c 4 database
        
      - name: Tear down
        run: docker compose -f docker-compose.yml down

  Python_Tests:

    name: Python's Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["pypy3.10", "3.9", "3.10", "3.11", "3.12", "3.13"]
    
    steps: 
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          architecture: 'x64'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      
      - name: Install the code linting and formatting tool Ruff
        run: pipx install ruff
      
      - name: Lint code with Ruff
        run: ruff check --output-format=github --target-version=py39

      - name: Check code formatting with Ruff
        run: ruff format --diff --target-version=py39
        continue-on-error: true

  Jest_Tests:
    name: Angular's Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Rpository
        uses: actions/checkout@v3

      - name: Set up Node js
        uses: actions/setup-node@v3
        with:
            node-version: '18'
      
      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test